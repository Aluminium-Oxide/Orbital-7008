{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chenjiayi\\\\campus-nav\\\\Orbital-7008\\\\src\\\\Component\\\\MapComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, ImageOverlay, Marker } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 建筑数据\nconst buildings = [{\n  id: 0,\n  name: \"EA\",\n  x: 200,\n  y: 300\n}, {\n  id: 11,\n  name: \"E1A\",\n  x: 200,\n  y: 300\n}, {\n  id: 1,\n  name: \"E1\",\n  x: 200,\n  y: 300\n}, {\n  id: 22,\n  name: \"E2A\",\n  x: 200,\n  y: 300\n}, {\n  id: 2,\n  name: \"E2\",\n  x: 200,\n  y: 300\n}, {\n  id: 33,\n  name: \"E3A\",\n  x: 200,\n  y: 300\n}, {\n  id: 3,\n  name: \"E3\",\n  x: 200,\n  y: 300\n}, {\n  id: 44,\n  name: \"E4A\",\n  x: 200,\n  y: 300\n}, {\n  id: 4,\n  name: \"E4\",\n  x: 200,\n  y: 300\n}, {\n  id: 5,\n  name: \"E5\",\n  x: 200,\n  y: 300\n}, {\n  id: 6,\n  name: \"E6\",\n  x: 200,\n  y: 300\n}, {\n  id: 7,\n  name: \"E7\",\n  x: 200,\n  y: 300\n}, {\n  id: 8,\n  name: \"E8\",\n  x: 200,\n  y: 300\n}, {\n  id: 10,\n  name: \"SDE1\",\n  x: 200,\n  y: 300\n}, {\n  id: 20,\n  name: \"SDE2\",\n  x: 200,\n  y: 300\n}, {\n  id: 30,\n  name: \"SDE3\",\n  x: 200,\n  y: 300\n}, {\n  id: 40,\n  name: \"SDE4\",\n  x: 200,\n  y: 300\n}];\n\n// 自定义像素坐标投影\nconst PixelProjection = {\n  project: latlng => L.point(latlng.lng, latlng.lat),\n  unproject: point => L.latLng(point.y, point.x)\n};\n\n// 自定义CRS\nconst PixelCRS = L.Util.extend({}, L.CRS.Simple, {\n  code: 'PixelCRS',\n  projection: PixelProjection,\n  transformation: new L.Transformation(1, 0, 1, 0),\n  scale: zoom => Math.pow(2, zoom),\n  zoom: scale => Math.log(scale) / Math.LN2,\n  distance: (p1, p2) => {\n    const dx = p2.lng - p1.lng;\n    const dy = p2.lat - p1.lat;\n    return Math.sqrt(dx * dx + dy * dy);\n  },\n  infinite: true\n});\nconst MapComponent = () => {\n  _s();\n  const mapRef = useRef(null);\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\n  const mapWidth = 1000; // 底图宽度（像素）\n  const mapHeight = 1000; // 底图高度（像素）\n\n  useEffect(() => {\n    if (mapRef.current) {\n      // 地图初始化后在这里添加自定义逻辑\n    }\n  }, []);\n\n  // 计算初始视图，确保地图完整显示\n  const initialZoom = Math.min(Math.log2(window.innerWidth / mapWidth), Math.log2(window.innerHeight / mapHeight));\n\n  // 关闭弹窗\n  const closePopup = () => {\n    setSelectedBuilding(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative h-[90vh] w-full\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      ref: mapRef,\n      crs: PixelCRS,\n      center: [mapHeight / 2, mapWidth / 2],\n      zoom: initialZoom,\n      maxZoom: 4,\n      minZoom: initialZoom - 2,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: \"/CDEmap.png\",\n        bounds: [[0, 0], [mapHeight, mapWidth]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), buildings.map(building => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [building.y, building.x],\n        eventHandlers: {\n          click: () => setSelectedBuilding(building)\n        }\n      }, building.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"V3hjMIBLyuoILHYHgEDaNGgUMq0=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","MapContainer","ImageOverlay","Marker","jsxDEV","_jsxDEV","buildings","id","name","x","y","PixelProjection","project","latlng","point","lng","lat","unproject","latLng","PixelCRS","Util","extend","CRS","Simple","code","projection","transformation","Transformation","scale","zoom","Math","pow","log","LN2","distance","p1","p2","dx","dy","sqrt","infinite","MapComponent","_s","mapRef","selectedBuilding","setSelectedBuilding","mapWidth","mapHeight","current","initialZoom","min","log2","window","innerWidth","innerHeight","closePopup","className","children","ref","crs","center","maxZoom","minZoom","style","height","width","url","bounds","fileName","_jsxFileName","lineNumber","columnNumber","map","building","position","eventHandlers","click","_c","$RefreshReg$"],"sources":["C:/Users/chenjiayi/campus-nav/Orbital-7008/src/Component/MapComponent.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, ImageOverlay, Marker, Popup } from 'react-leaflet';\n\ntype Building = {\n  id: number;\n  name: string;\n  x: number;\n  y: number;\n};\n\n// 建筑数据\nconst buildings = [\n  { id: 0, name: \"EA\", x: 200, y: 300 },\n  { id: 11, name: \"E1A\", x: 200, y: 300 },\n  { id: 1, name: \"E1\", x: 200, y: 300 },\n  { id: 22, name: \"E2A\", x: 200, y: 300 },\n  { id: 2, name: \"E2\", x: 200, y: 300 },\n  { id: 33, name: \"E3A\", x: 200, y: 300 },\n  { id: 3, name: \"E3\", x: 200, y: 300 },\n  { id: 44, name: \"E4A\", x: 200, y: 300 },\n  { id: 4, name: \"E4\", x: 200, y: 300 },\n  { id: 5, name: \"E5\", x: 200, y: 300 },\n  { id: 6, name: \"E6\", x: 200, y: 300 },\n  { id: 7, name: \"E7\", x: 200, y: 300 },\n  { id: 8, name: \"E8\", x: 200, y: 300 },\n  { id: 10, name: \"SDE1\", x: 200, y: 300 },\n  { id: 20, name: \"SDE2\", x: 200, y: 300 },\n  { id: 30, name: \"SDE3\", x: 200, y: 300 },\n  { id: 40, name: \"SDE4\", x: 200, y: 300 },\n];\n\n// 自定义像素坐标投影\nconst PixelProjection = {\n  project: (latlng: L.LatLng) => L.point(latlng.lng, latlng.lat),\n  unproject: (point: L.Point) => L.latLng(point.y, point.x),\n};\n\n// 自定义CRS\nconst PixelCRS = L.Util.extend({}, L.CRS.Simple, {\n  code: 'PixelCRS',\n  projection: PixelProjection,\n  transformation: new L.Transformation(1, 0, 1, 0),\n  scale: (zoom: number) => Math.pow(2, zoom),\n  zoom: (scale: number) => Math.log(scale) / Math.LN2,\n  distance: (p1: L.LatLng, p2: L.LatLng) => {\n    const dx = p2.lng - p1.lng;\n    const dy = p2.lat - p1.lat;\n    return Math.sqrt(dx * dx + dy * dy);\n  },\n  infinite: true,\n});\n\n\n\nconst MapComponent = () => {\n  const mapRef = useRef(null);\n  const [selectedBuilding, setSelectedBuilding] = useState<Building | null>(null);\n  const mapWidth = 1000; // 底图宽度（像素）\n  const mapHeight = 1000; // 底图高度（像素）\n\n  useEffect(() => {\n    if (mapRef.current) {\n      // 地图初始化后在这里添加自定义逻辑\n    }\n  }, []);\n  \n  // 计算初始视图，确保地图完整显示\n  const initialZoom = Math.min(\n    Math.log2(window.innerWidth / mapWidth),\n    Math.log2(window.innerHeight / mapHeight)\n  );\n\n  // 关闭弹窗\n  const closePopup = () => {\n    setSelectedBuilding(null);\n  };\n\n  return (\n    <div className=\"relative h-[90vh] w-full\">\n      <MapContainer\n        ref={mapRef}\n        crs={PixelCRS}\n        center={[mapHeight / 2, mapWidth / 2]}\n        zoom={initialZoom}\n        maxZoom={4}\n        minZoom={initialZoom - 2}\n        style={{ height: '100%', width: '100%' }}\n      >\n        {/* 你的图层组件 */}\n\n        {/* 添加底图 */}\n        <ImageOverlay\n          url=\"/CDEmap.png\"\n          bounds={[[0, 0], [mapHeight, mapWidth]]}\n        />\n        \n        {/* 添加建筑标记 */}\n        {buildings.map(building => (\n          <Marker\n            key={building.id}\n            position={[building.y, building.x]}\n            eventHandlers={{\n              click: () => setSelectedBuilding(building)\n            }}\n          >\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;    \n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}